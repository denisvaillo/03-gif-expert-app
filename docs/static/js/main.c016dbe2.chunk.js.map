{"version":3,"sources":["components/AddCategory.js","helpers/giphy.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","categories","includes","type","value","onChange","target","placeholder","getGifts","category","a","url","fetch","resp","json","data","gifts","map","item","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifts","console","debug","class","gift","GifExpertApp","props","ReactDOM","render","document","getElementById"],"mappings":"yMAsCeA,EAnCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACFN,GAAe,SAAAO,GACX,OAAIA,EAAWC,SAASN,GAGjBK,EAFG,CAAGL,GAAT,mBAAwBK,OAIhCJ,EAAc,KAId,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SApBQ,SAACN,GACjBF,EAAcE,EAAEO,OAAOF,QAoBfG,YAAY,sB,+BC1BfC,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCF,EADlC,6BAFT,oCAES,SAGDG,MAAMD,GAHL,cAGdE,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEJC,EAAQD,EAAKE,KAAK,SAAAC,GAAI,YAAK,CAC3BC,GAAUD,EAAKC,GACfC,MAAUF,EAAKE,MACfT,IAAG,UAAOO,EAAKG,cAAZ,aAAO,EAAaC,UAAUX,QATjB,kBAYbK,GAZa,4CAAH,sDCUNO,EAVK,SAAC,GAAyB,IAAvBJ,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOT,EAAW,EAAXA,IAC9B,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAMN,IACrB,4BAAKA,MAFqDD,ICkCvDQ,EAlCC,SAAC,GAAmB,IAAhBlB,EAAe,EAAfA,SAEhB,ECHyB,SAAEA,GAC3B,MAA0Bd,mBAAS,CAC/BqB,MAAU,GACVY,SAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAW,WACPvB,EAASC,GAAUuB,MAAM,SAAAhB,GACrBc,EAAS,CACLd,MAAUA,EACVY,SAAU,SAGnB,IAEIC,EDZoBI,CAAcxB,GAAjCO,EAAR,EAAQA,MAAOY,EAAf,EAAeA,QAaf,OAXAM,QAAQC,MAAMnB,GACdkB,QAAQC,MAAMP,GAWV,qCACI,+BAAMnB,EAAN,OACA,qBAAKe,UAAU,QAAf,SAEQI,EAEQ,qBAAKQ,MAAM,mCAAX,sBAEApB,EAAMC,KAAK,SAAAoB,GAAI,OACX,cAAC,EAAD,eAAgCA,GAAdA,EAAKlB,aEQxCmB,EAhCM,SAAAC,GAEjB,MAAsC5C,mBAAS,CAAC,YAAhD,mBAAQM,EAAR,KAAoBP,EAApB,KAQA,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BAEQO,EAAWgB,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCpBtC+B,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,W","file":"static/js/main.c016dbe2.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInput = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCategories( categories => { \r\n            if(!categories.includes(inputValue)){\r\n                return [ inputValue, ...categories ];    \r\n            }\r\n            return categories;\r\n        });\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInput }\r\n                placeholder=\"Buscar gifs...\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","const apiKey = '90XZKF2ro6ebDRk27MqYH6Pkf4F75zHk';\r\n\r\nexport const getGifts = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=${apiKey}`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    let gifts = data.map( item => ({ \r\n        id      : item.id,\r\n        title   : item.title,\r\n        url     : item.images?.downsized.url\r\n    }));\r\n\r\n    return gifts;\r\n}\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ( {id, title, url } ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" key={ id }>\r\n            <img src={url} alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GifGridItem;","import React, { useState, useEffect } from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifts';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ( { category }) => {\r\n\r\n    const { gifts, loading } = useFetchGifts(category);\r\n\r\n    console.debug(gifts);\r\n    console.debug(loading);\r\n\r\n    /*\r\n    const [gifts, setGifts] = useState([]);\r\n    \r\n    useEffect( () => {\r\n        getGifts(category).then( setGifts );\r\n    }, [ category ]);\r\n    */\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category } </h3>\r\n            <div className=\"cards\">\r\n                { \r\n                    loading \r\n                        ? \r\n                            <div class=\"animate__animated animate__flash\">Cargando</div>\r\n                        : (\r\n                            gifts.map( gift => (\r\n                                <GifGridItem key={gift.id} { ...gift }/>) \r\n                            )\r\n                        )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifts } from \"../helpers/giphy\";\r\n\r\nexport const useFetchGifts = ( category ) => {\r\n    const [state, setState] = useState({\r\n        gifts   : [],\r\n        loading : true\r\n    })\r\n    \r\n    useEffect( () => {\r\n        getGifts(category).then( gifts => {\r\n            setState({\r\n                gifts   : gifts,\r\n                loading : false\r\n            })\r\n        } );\r\n    }, [ ]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = props => {\r\n\r\n    const [ categories, setCategories ] = useState(['Pokemon']);\r\n\r\n    /*\r\n    const addCategory = () => {\r\n        setCategories(['Atletico de Madrid', ...categories]);\r\n    }\r\n    */\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>  \r\n            <hr/>\r\n            \r\n            <AddCategory setCategories={ setCategories } />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid key={category} category={category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nGifExpertApp.propTypes = {\r\n\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}